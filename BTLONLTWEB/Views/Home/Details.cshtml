
@model BTLONLTWEB.Models.Cart
@{
    var nfi = new System.Globalization.NumberFormatInfo { NumberGroupSeparator = "." };
    List<string> slideList = ViewBag.SlideList;
    List<string> Decriplist = ViewBag.DecripList;
    var product = ViewBag.Product;
    int i = 0;
    var ListQuantity = new List<SelectListItem>();
    for (int j = 0; j <= product.Quantity;j++ )
    {
        var y = new SelectListItem
        {
            Text = j.ToString(),
            Value = j.ToString()
        };
        ListQuantity.Add(y);
    }
}
<!DOCTYPE html>
<html style="font-size: 16px;" lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta charset="utf-8">
    <meta name="keywords" content="TÊN SẢN ​PHẨM">
    <meta name="description" content="">
    <title></title>
    <link rel="stylesheet" href="~/Content/Details.css" media="screen">
    <script class="u-script" type="text/javascript" src="~/Scripts/Slide.js" defer=""></script>
    <script class="u-script" type="text/javascript" src="~/Scripts/Slide2.js" defer=""></script>
    @*<script class="u-script" type="text/javascript" src="~/Scripts/jquery.js" defer=""></script>*@
    <script class="u-script" type="text/javascript" src="~/Scripts/nicepage.js" defer=""></script>
    <link id="u-theme-google-font" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:100,100i,300,300i,400,400i,500,500i,700,700i,900,900i|Open+Sans:300,300i,400,400i,500,500i,600,600i,700,700i,800,800i">
    <link id="u-page-google-font" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Oswald:200,300,400,500,600,700">


    <script type="application/ld+json">
        {
        "name": ""
        }
    </script>
    <meta name="theme-color" content="#478ac9">
    <meta property="og:title" content="Home">
    <meta property="og:type" content="website">
</head>
<body class="u-body u-xl-mode" data-lang="en">
    <section class="u-align-center u-clearfix u-white u-section-1" id="sec-4e0d">
        <div class="u-clearfix u-sheet u-sheet-1">
            <div class="u-carousel u-gallery u-layout-thumbnails u-lightbox u-no-transition u-show-text-always u-gallery-1" id="carousel-3f45" data-interval="5000" data-u-ride="carousel">
                <div class="u-carousel-inner u-gallery-inner" role="listbox">
                    @foreach (var item1 in slideList)
                    {
                        int x=slideList.FindIndex(p=>p==item1);
                        if(x==0)
                        {
                            <div class="u-active u-carousel-item u-gallery-item u-carousel-item-1">
                                <div class="u-back-slide" data-image-width="5000" data-image-height="5000">
                                    <img class="u-back-image u-expanded" src="@Url.Content(item1)">
                                </div>
                                <div class="u-over-slide u-over-slide-1">

                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="u-carousel-item u-gallery-item u-carousel-item-@x">
                                <div class="u-back-slide" data-image-width="5000" data-image-height="5000">
                                    <img class="u-back-image u-expanded" src="@Url.Content(item1)">
                                </div>
                                <div class="u-over-slide u-over-slide-@x">
                                </div>
                            </div>
                        }
                    }
                </div>
                <a class="u-carousel-control u-carousel-control-prev u-opacity u-opacity-70 u-spacing-10 u-carousel-control-1" href="#carousel-3f45" role="button" data-u-slide="prev">
                    <span aria-hidden="true">
                        <svg viewBox="0 0 451.847 451.847">
                            <path d="M97.141,225.92c0-8.095,3.091-16.192,9.259-22.366L300.689,9.27c12.359-12.359,32.397-12.359,44.751,0
c12.354,12.354,12.354,32.388,0,44.748L173.525,225.92l171.903,171.909c12.354,12.354,12.354,32.391,0,44.744
c-12.354,12.365-32.386,12.365-44.745,0l-194.29-194.281C100.226,242.115,97.141,234.018,97.141,225.92z"></path>
                        </svg>
                    </span>
                    <span class="sr-only">
                        <svg viewBox="0 0 451.847 451.847">
                            <path d="M97.141,225.92c0-8.095,3.091-16.192,9.259-22.366L300.689,9.27c12.359-12.359,32.397-12.359,44.751,0
c12.354,12.354,12.354,32.388,0,44.748L173.525,225.92l171.903,171.909c12.354,12.354,12.354,32.391,0,44.744
c-12.354,12.365-32.386,12.365-44.745,0l-194.29-194.281C100.226,242.115,97.141,234.018,97.141,225.92z"></path>
                        </svg>
                    </span>
                </a>
                <a class="u-carousel-control u-carousel-control-next u-opacity u-opacity-70 u-spacing-10 u-text-white u-carousel-control-2" href="#carousel-3f45" role="button" data-u-slide="next">
                    <span aria-hidden="true">
                        <svg viewBox="0 0 451.846 451.847">
                            <path d="M345.441,248.292L151.154,442.573c-12.359,12.365-32.397,12.365-44.75,0c-12.354-12.354-12.354-32.391,0-44.744
L278.318,225.92L106.409,54.017c-12.354-12.359-12.354-32.394,0-44.748c12.354-12.359,32.391-12.359,44.75,0l194.287,194.284
c6.177,6.18,9.262,14.271,9.262,22.366C354.708,234.018,351.617,242.115,345.441,248.292z"></path>
                        </svg>
                    </span>
                    <span class="sr-only">
                        <svg viewBox="0 0 451.846 451.847">
                            <path d="M345.441,248.292L151.154,442.573c-12.359,12.365-32.397,12.365-44.75,0c-12.354-12.354-12.354-32.391,0-44.744
L278.318,225.92L106.409,54.017c-12.354-12.359-12.354-32.394,0-44.748c12.354-12.359,32.391-12.359,44.75,0l194.287,194.284
c6.177,6.18,9.262,14.271,9.262,22.366C354.708,234.018,351.617,242.115,345.441,248.292z"></path>
                        </svg>
                    </span>
                </a>
               
                    @if (slideList.Count > 1)
                    {
                        i = 0;
                        <ol class="u-carousel-thumbnails">
                            @foreach(var item in slideList)
                            {
                                if(i==0)
                                {
                                <li class="u-active u-carousel-thumbnail u-carousel-thumbnail-1" data-u-target="#carousel-3f45" data-u-slide-to="0">
                                    <img class="u-carousel-thumbnail-image u-image" src="@Url.Content(item)">
                                </li>
                                }
                                else
                                {
                                <li class="u-active u-carousel-thumbnail u-carousel-thumbnail-1" data-u-target="#carousel-3f45" data-u-slide-to="@i">
                                    <img class="u-carousel-thumbnail-image u-image" src="@Url.Content(item)">
                                </li>
                                }
                                i++;
                            }
                        </ol>
                    }
                        
            </div>
            <h2 class="u-align-left u-custom-font u-font-oswald u-text u-text-body-alt-color u-text-1">@product.NameProduct</h2>
            <ul class="u-align-left u-custom-font u-font-oswald u-text u-text-2" style="margin-right:0px">
                @if(product.Description!=null)
                { 
                    foreach (var item in Decriplist)
                    {
                        <li>@item.ToString()</li>
                    }
                }
                else
                {
                    for(int y=0;y<10;y++)
                    {
                        <li>&nbsp;</li>
                    }
                }
            </ul>
            @{
                var discount = (product.Price - (product.Price * product.Discount)).ToString("#,##", nfi);


            }
            @if (product.Discount > 0)
            {

                <p class="u-align-left u-custom-font u-font-oswald u-text u-text-default u-text-black u-text-3" style="font-weight:normal;text-decoration:line-through;">@product.Price.ToString("#,##", nfi) vnđ</p>
                <h5 class="u-align-left u-custom-font u-font-oswald u-text u-text-custom-color-1 u-text-4">PRICE:</h5>
                <h5 class="u-align-left u-custom-font u-font-oswald u-text u-text-custom-color-1 u-text-5">@discount vnđ&nbsp;</h5>
            }
            else
            {
                <p class="u-align-left u-custom-font u-font-oswald u-text u-text-default u-text-white u-text-3" style="font-weight:normal">&nbsp;&nbsp;</p>
                <h5 class="u-align-left u-custom-font u-font-oswald u-text u-text-custom-color-1 u-text-4">PRICE:</h5>
                <h5 class="u-align-left u-custom-font u-font-oswald u-text u-text-custom-color-1 u-text-6">@product.Price.ToString("#,##", nfi) vnđ&nbsp;</h5>
            }
            <div class="u-form u-form-1">
                @using (Html.BeginForm("Details", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <div class="u-clearfix u-form-horizontal u-form-spacing-15 u-inner-form" style="padding: 15px;">
                        <div class="u-form-group u-form-select u-label-none u-form-group-1">
                            <table>
                                <tr>
                                    <td class="u-form-select-wrapper" style="width:150px">
                                        @Html.DropDownListFor(model => model.Quantity, ListQuantity, new
                                       {
                                           @class = "u-border-1 u-border-grey-30 u-input u-input-rectangle u-white u-input-1",
                                           id = "select-e5fd",
                                           name = "select"
                                       })
                                    </td>
                                    @if(product.Quantity!=0)
                                    {
                                    <td>
                                        <div class="u-form-group u-form-submit">
                                            <a href="#" class="u-border-none u-btn u-btn-submit u-button-style u-custom-color-1 u-hover-white u-text-white u-btn-1">Submit</a>
                                            <input type="submit" value="submit" class="u-form-control-hidden">
                                        </div>
                                    </td>
                                    }
                                    else
                                    {
                                        <td>
                                            <div class="u-form-group u-form-submit">
                                                <a class="u-border-none u-btn u-btn-submit u-button-style u-custom-color-1 u-text-white u-btn-1">Hết Hàng</a>
                                            </div>
                                        </td>
                                    }
                                </tr>
                                <tr>
                                    <td colspan="2">
                                        @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                    </td>
                                </tr>
                            </table>

                                @Html.TextBoxFor(model => model.IDProduct, new
                                {
                                    @class = "u-border-2 u-border-grey-30 u-input u-input-rectangle u-radius-10 u-white u-input-1",
                                    type = "text",
                                    placeholder = "Nhập tên sản phẩm mới",
                                    id = "name-3b9a",
                                    @Value = product.IdProduct,
                                    style = "display:none"
                                })
                                @Html.ValidationMessageFor(model => model.IDProduct, "", new { @class = "text-danger" })
                                @Html.TextBoxFor(model => model.IDUser, new
                                {
                                    @class = "u-border-2 u-border-grey-30 u-input u-input-rectangle u-radius-10 u-white u-input-1",
                                    type = "text",
                                    placeholder = "Nhập tên sản phẩm mới",
                                    id = "name-3b9a",
                                    @Value =Session["User"],
                                    style = "display:none"
                                })
                                @Html.ValidationMessageFor(model => model.IDUser, "", new { @class = "text-danger" })
                            
                        </div>
                      
                    </div>
                }
            </div>
               
        </div>
    </section>

</body>
</html>